//
// > Notice: Floating Trees Inc. @ 2025
// > Create Time: 2025-07-20 13:56:00
//

#include "kd/shaders/common/bindless.kds"

#pragma vertex VSMain
#pragma pixel PSMain

struct PushConstants
{
    uint In;
    uint Sampler;
    uint2 Pad;
};
PUSH_CONSTANTS(PushConstants, Push);

struct VertexOutput
{
    float4 Pos : SV_Position;
    float2 Texcoord : TEXCOORD;
};

VertexOutput VSMain(uint vid : SV_VertexID)
{
    VertexOutput output;

    // Fullscreen triangle vertices
    float2 positions[3] = {
        float2(-1.0f, -1.0f),
        float2(3.0f, -1.0f),
        float2(-1.0f, 3.0f)
    };

    float2 uvs[3] = {
        float2(0.0f, 1.0f),
        float2(2.0f, 1.0f),
        float2(0.0f, -1.0f)
    };

    output.Pos = float4(positions[vid], 0.0f, 1.0f);
    output.Texcoord = uvs[vid];
    return output;
}

float4 PSMain(VertexOutput output) : SV_Target
{
    Texture2D<float4> input = ResourceDescriptorHeap[Push.In];
    SamplerState state = SamplerDescriptorHeap[Push.Sampler];

    return input.Sample(state, output.Texcoord);
}
