//
// > Notice: Floating Trees Inc. @ 2025
// > Create Time: 2025-07-15 22:59:19
//

#ifndef BINDLESS_KDS
#define BINDLESS_KDS

static const uint INVALID_DESCRIPTOR = 0x00000000;

// Push constants
#ifdef D3D12
    #define PUSH_CONSTANTS(Type, Name) ConstantBuffer<Type> Name : register(b9)
#elif VULKAN
    #define PUSH_CONSTANTS(Type, Name) [[vk::push_constant]] ConstantBuffer<Type> Name : register(b0)
    [[vk::binding(2, 0)]] RaytracingAccelerationStructure gRaytracingASArray[];
#elif METAL
    #define PUSH_CONSTANTS(Type, Name) ConstantBuffer<Type> Name : register(b0)
#endif

// Bindless AS
RaytracingAccelerationStructure LoadRaytracingWorld(uint index)
{
#if (D3D12 || METAL)
    return ResourceDescriptorHeap[index];
#elif VULKAN
    return gRaytracingASArray[index];
#endif
}

// Draw ID for indirect
#ifdef D3D12
    struct WhyTheFuckDoINeedThis { uint id; };

    ConstantBuffer<WhyTheFuckDoINeedThis> gDrawID : register(b1);
    uint GetDrawID()
    {
        return gDrawID.id;
    }
#elif VULKAN
    [[vk::ext_builtin_input(4426)]] static const uint gDrawID;
    uint GetDrawID()
    {
        return gDrawID;
    }
#elif METAL
    // TODO
    uint GetDrawID()
    {
        return 0;
    }
#endif

#endif
