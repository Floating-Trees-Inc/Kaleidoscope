//
// > Notice: Floating Trees Inc. @ 2025
// > Create Time: 2025-08-20 14:16:00
//

#include "kd/shaders/common/bindless.kds"
#include "kd/shaders/common/compute.kds"

#pragma compute CSMain

struct PushConstants
{
    uint Input;
    uint InputSampler;
    uint Output;
    float Strength;

    uint Width;
    uint Height;
    uint2 Pad;
};
PUSH_CONSTANTS(PushConstants, Push);

[numthreads(8, 8, 1)]
void CSMain(uint3 ThreadID : SV_DispatchThreadID)
{
    Texture2D<float4> Input = ResourceDescriptorHeap[Push.Input];
    SamplerState InputSampler = SamplerDescriptorHeap[Push.InputSampler];
    RWTexture2D<float4> OutputHDR = ResourceDescriptorHeap[Push.Output];

    float4 inputColor = Input.Load(ThreadID);
    OutputHDR[ThreadID.xy] += (inputColor * Push.Strength);
}
