//
// > Notice: Floating Trees Inc. @ 2025
// > Create Time: 2025-07-26 00:17:42
//

#include "kd/shaders/common/bindless.kds"

#pragma vertex VSMain
#pragma pixel FSMain

static const float3 POSITIONS1[] = {
    float3(-0.5f, -0.5f, 0.0f),  // bottom-left
    float3( 0.5f, -0.5f, 0.0f),  // bottom-right
    float3( 0.5f,  0.5f, 0.0f)   // top-right
};

static const float3 POSITIONS2[] = {
    float3(-0.5f, -0.5f, 0.0f),  // bottom-left
    float3( 0.5f,  0.5f, 0.0f),  // top-right
    float3(-0.5f,  0.5f, 0.0f)   // top-left
};

static const float3 COLORS[] = {
    float3(1.0f, 0.0f, 0.0f),
    float3(0.0f, 1.0f, 0.0f),
    float3(0.0f, 0.0f, 1.0f)
};

struct VertexOutput
{
    float4 Position : SV_Position;
    float3 Color : COLOR;
};

VertexOutput VSMain(uint VertexID : SV_VertexID)
{
    VertexOutput output = (VertexOutput)0;

    uint drawID = GetDrawID();
    output.Position = float4(drawID == 0 ? POSITIONS1[VertexID] : POSITIONS2[VertexID], 1.0f);
    output.Color = COLORS[VertexID];

    return output;  
}

float4 FSMain(VertexOutput input) : SV_Target
{
    return float4(input.Color, 1.0f);
}